{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\evan_\\\\Documents\\\\GitHub\\\\F29SO-Picshare\\\\client\\\\src\\\\Post.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\nimport exifr from 'exifr';\nvar split = [];\nvar add = true;\nvar lat = \"\";\nvar long = \"\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"red\"\n  },\n  imageFileCard: {},\n  imgc12: {\n    height: 'auto',\n    maxWidth: '40vh',\n    maxHeight: '30vh',\n    borderRadius: '0%'\n  }\n});\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: props.description,\n      key: props.key,\n      file: props.file,\n      tags: props.tags,\n      user: props.user,\n      id: 0,\n      toAdd: props.toAdd\n    };\n  }\n\n  postPostInfo() {\n    if (!this.state.toAdd) {\n      console.log(\"Not adding to DB\");\n    } else {\n      console.log(lat);\n      console.log(long);\n      Axios.post('http://localhost:3001/posts', {\n        username: this.state.user,\n        description: this.state.description,\n        img: this.state.file,\n        latitude: lat,\n        longitude: long\n      }).then(response => {\n        if (response) {\n          console.log(response);\n          this.setState({\n            id: response.data.insertId\n          });\n          this.parseTags();\n        } else {\n          console.log(\"no response\");\n        }\n      });\n      add = false;\n      Axios.post('http://localhost:3001/updateScore', {\n        username: this.state.user\n      }).then(response => {\n        if (response) {\n          console.log(response);\n        } else {\n          console.log(\"no response\");\n        }\n      });\n    }\n  }\n\n  async processFile(arg) {\n    let url;\n    if (arg instanceof Blob) url = URL.createObjectURL(arg);else url = arg; // original image loaded, extract thumb\n\n    try {\n      let {\n        latitude,\n        longitude\n      } = await exifr.gps(url);\n      console.log(longitude);\n      console.log(latitude);\n      lat = latitude;\n      long = longitude;\n    } catch {\n      console.log(\"No EXIF Data\");\n    }\n  }\n\n  postPostTags() {\n    console.log(\"intags\");\n    console.log(this.state.id);\n\n    if (this.state.id != 0) {\n      Axios.post('http://localhost:3001/tags', {\n        tags: split,\n        id: this.state.id\n      }).then(response => {\n        if (response) {} else {\n          console.log(\"no response\");\n        }\n      });\n    }\n  }\n\n  parseTags() {\n    split = this.state.tags.split(\" \");\n    console.log(split);\n    this.postPostTags();\n  }\n\n  timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  async componentDidMount() {\n    // Runs after the first render\n    //Every time a post is created, the postPostInfo method is called\n    this.processFile(this.state.file);\n    await timeout(1000);\n    this.postPostInfo();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.imageFileCard,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.imgc12,\n            src: this.state.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: this.state.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, this.state.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Post);","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/F29SO-Picshare/client/src/Post.js"],"names":["React","Component","withStyles","Card","Typography","ListItem","CardContent","Axios","exifr","split","add","lat","long","styles","theme","root","backgroundColor","imageFileCard","imgc12","height","maxWidth","maxHeight","borderRadius","Post","constructor","props","state","description","key","file","tags","user","id","toAdd","postPostInfo","console","log","post","username","img","latitude","longitude","then","response","setState","data","insertId","parseTags","processFile","arg","url","Blob","URL","createObjectURL","gps","postPostTags","timeout","delay","Promise","res","setTimeout","componentDidMount","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Axios from 'axios';\r\nimport exifr from 'exifr';\r\n\r\nvar split = [];\r\nvar add = true;\r\nvar lat = \"\";\r\nvar long = \"\";\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: \"red\"\r\n  },\r\n  imageFileCard: {\r\n\r\n  },\r\n  imgc12: {\r\n    height: 'auto',\r\n    maxWidth:'40vh',\r\n    maxHeight:'30vh',\r\n    borderRadius: '0%',\r\n\r\n\r\n  }\r\n});\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        description: props.description,\r\n        key: props.key,\r\n        file: props.file,\r\n        tags : props.tags,\r\n        user: props.user,\r\n        id:0,\r\n        toAdd: props.toAdd\r\n      };\r\n    }\r\n\r\n    postPostInfo() {\r\n\r\n      if(!this.state.toAdd) {\r\n        console.log(\"Not adding to DB\");\r\n      }\r\n      else {\r\n\r\n      console.log(lat);\r\n      console.log(long);\r\n      Axios.post('http://localhost:3001/posts', {\r\n                username: this.state.user,\r\n                description: this.state.description,\r\n                img: this.state.file,\r\n                latitude: lat,\r\n                longitude: long\r\n            }).then((response) => {\r\n              if(response){\r\n                console.log(response)\r\n                this.setState({id : response.data.insertId});\r\n                this.parseTags();\r\n              }else {\r\n                console.log(\"no response\")\r\n              }\r\n            })\r\n          add = false;\r\n          Axios.post('http://localhost:3001/updateScore', {\r\n                    username: this.state.user\r\n                }).then((response) => {\r\n                  if(response){\r\n                    console.log(response)\r\n                  }else {\r\n                    console.log(\"no response\")\r\n                  }\r\n                })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async processFile(arg) {\r\n        let url;\r\n        if (arg instanceof Blob)\r\n            url = URL.createObjectURL(arg);\r\n        else\r\n            url = arg;\r\n        // original image loaded, extract thumb\r\n        try {\r\n            let { latitude, longitude } = await exifr.gps(url);\r\n            console.log(longitude);\r\n            console.log(latitude);\r\n            lat = latitude;\r\n            long = longitude;\r\n\r\n        }\r\n        catch{\r\n            console.log(\"No EXIF Data\");\r\n        }\r\n\r\n    }\r\n    postPostTags() {\r\n      console.log(\"intags\")\r\n      console.log(this.state.id)\r\n      if(this.state.id != 0){\r\n        Axios.post('http://localhost:3001/tags', {\r\n                  tags: split,\r\n                  id: this.state.id\r\n              }).then((response) => {\r\n                if(response){\r\n                }else {\r\n                  console.log(\"no response\")\r\n                }\r\n              })\r\n        }\r\n    }\r\n\r\n    parseTags(){\r\n\r\n      split = this.state.tags.split(\" \")\r\n      console.log(split)\r\n      this.postPostTags();\r\n    }\r\n\r\n    timeout(delay: number) {\r\n      return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n\r\n    async componentDidMount() { // Runs after the first render\r\n      //Every time a post is created, the postPostInfo method is called\r\n        this.processFile(this.state.file);\r\n        await timeout(1000);\r\n        this.postPostInfo();\r\n\r\n    }\r\n\r\n    render() {\r\n          const { classes } = this.props;\r\n\r\n          return (\r\n            <ListItem key={this.state.key}>\r\n                <Card className={classes.imageFileCard}>\r\n                    <CardContent>\r\n                    <img className={classes.imgc12} src={this.state.file } />\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        {this.state.description}\r\n                    </Typography>\r\n                    <br></br>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        {this.state.tags}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </ListItem>\r\n          );\r\n        }\r\n    }\r\n\r\n    export default withStyles(styles, { withTheme: true })(Post);\r\n"]},"metadata":{},"sourceType":"module"}