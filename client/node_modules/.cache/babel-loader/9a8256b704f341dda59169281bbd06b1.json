{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\evan_\\\\Documents\\\\GitHub\\\\F29SO-Picshare\\\\client\\\\src\\\\Newsfeed.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { withRouter, useHistory, BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport PostDialog from './PostDialog';\nimport Post from './Post';\nimport Axios from 'axios';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"red\"\n  },\n  listClass: {\n    borderStyle: 'dashed',\n    borderColor: 'red',\n    display: 'inline-block'\n  },\n  listClass2: {\n    borderStyle: 'dashed',\n    borderColor: 'blue',\n    display: 'inline-block',\n    alignItems: 'center',\n    justify: 'center'\n  }\n});\n\nclass Newsfeed extends Component {\n  constructor(props) {\n    super(props);\n    this.addPost = this.addPost.bind(this);\n    this.createPost = this.createPost.bind(this);\n    this.state = {\n      feedItems: [],\n      currentText: \"\",\n      user: \"\"\n    };\n  }\n\n  createPost(description, tags, file) {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      description: description,\n      tags: tags,\n      file: file,\n      user: this.state.user\n    }, this.state.feedItems.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  addPost(description, tags, image) {\n    const newPost = this.createPost(description, tags, image);\n    this.setState({\n      feedItems: this.state.feedItems.concat([newPost])\n    });\n  }\n\n  getPosts() {\n    this.setState({\n      feedItems: []\n    });\n    Axios.post('http://localhost:3001/allposts', {}).then(response => {\n      console.log(response.data[0].description);\n\n      if (response) {\n        for (var i = 0; i < response.data.length; i++) {\n          const newPost = this.createPost(response.data[i].description, \"test\", \"https://shortyawards.imgix.net/entries/10th/f86a61c4-6af8-41c2-9f6c-5d8493b33eac.jpeg?auto=format&fit=crop&h=400&q=65&w=400&s=67548cae6d33a6c1210960a19d943799\");\n          addPost(newPost);\n          this.setState({\n            feedItems: this.state.feedItems.concat(newPost)\n          });\n        }\n      } else {\n        console.log(\"no response\");\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Runs after the first render\n    Axios.get('http://localhost:3001/checklogin').then(response => {\n      if (response.data.loggedIn === true) {\n        this.setState({\n          user: response.data.user[0].Username\n        });\n        console.log(response.data.user[0].Username);\n      }\n    });\n    this.getPosts();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.listClass,\n      children: [/*#__PURE__*/_jsxDEV(PostDialog, {\n        onPostSubmit: this.addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        ref: \"feed\",\n        className: classes.listClass2,\n        children: [console.log(\"number of elements: \" + this.state.feedItems.length), this.state.feedItems.reverse().map(item => {\n          return item;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Newsfeed);","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/F29SO-Picshare/client/src/Newsfeed.js"],"names":["React","Component","TextField","Button","Container","List","withRouter","useHistory","BrowserRouter","Switch","Route","Link","Redirect","PostDialog","Post","Axios","withStyles","styles","theme","root","backgroundColor","listClass","borderStyle","borderColor","display","listClass2","alignItems","justify","Newsfeed","constructor","props","addPost","bind","createPost","state","feedItems","currentText","user","description","tags","file","length","image","newPost","setState","concat","getPosts","post","then","response","console","log","data","i","componentDidMount","get","loggedIn","Username","render","classes","reverse","map","item","withTheme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,aAAhC,EAAgDC,MAAhD,EAAwDC,KAAxD,EAA+DC,IAA/D,EAAqEC,QAArE,QAAoF,kBAApF;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb,GADe;AAIrBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,QADJ;AAETC,IAAAA,WAAW,EAAE,KAFJ;AAITC,IAAAA,OAAO,EAAC;AAJC,GAJU;AAUrBC,EAAAA,UAAU,EAAE;AACPH,IAAAA,WAAW,EAAE,QADN;AAERC,IAAAA,WAAW,EAAE,MAFL;AAGRC,IAAAA,OAAO,EAAC,cAHA;AAIRE,IAAAA,UAAU,EAAC,QAJH;AAKXC,IAAAA,OAAO,EAAC;AALG;AAVS,CAAL,CAApB;;AAqBA,MAAMC,QAAN,SAAuB3B,SAAvB,CAAiC;AAE7B4B,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAG,EADH;AAETC,MAAAA,WAAW,EAAG,EAFL;AAGTC,MAAAA,IAAI,EAAG;AAHE,KAAb;AAMH;;AAEDJ,EAAAA,UAAU,CAACK,WAAD,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;AAChC,wBAAO,QAAC,IAAD;AAAwC,MAAA,WAAW,EAAEF,WAArD;AAAkE,MAAA,IAAI,EAAEC,IAAxE;AAA8E,MAAA,IAAI,EAAEC,IAApF;AAA0F,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWG;AAA3G,OAAW,KAAKH,KAAL,CAAWC,SAAX,CAAqBM,MAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDV,EAAAA,OAAO,CAACO,WAAD,EAAcC,IAAd,EAAoBG,KAApB,EAA2B;AAC9B,UAAMC,OAAO,GAAG,KAAKV,UAAL,CAAgBK,WAAhB,EAA6BC,IAA7B,EAAmCG,KAAnC,CAAhB;AACA,SAAKE,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBU,MAArB,CAA4B,CAACF,OAAD,CAA5B;AADF,KAAd;AAGH;;AAEDG,EAAAA,QAAQ,GAAG;AACT,SAAKF,QAAL,CAAc;AACdT,MAAAA,SAAS,EAAG;AADE,KAAd;AAGApB,IAAAA,KAAK,CAACgC,IAAN,CAAW,gCAAX,EAA6C,EAA7C,EACOC,IADP,CACaC,QAAD,IAAc;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBd,WAA7B;;AACA,UAAGW,QAAH,EAAY;AACV,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,QAAQ,CAACG,IAAT,CAAcX,MAAjC,EAAyCY,CAAC,EAA1C,EAA8C;AAC9C,gBAAMV,OAAO,GAAG,KAAKV,UAAL,CAAgBgB,QAAQ,CAACG,IAAT,CAAcC,CAAd,EAAiBf,WAAjC,EAA6C,MAA7C,EAAoD,gKAApD,CAAhB;AACAP,UAAAA,OAAO,CAACY,OAAD,CAAP;AACA,eAAKC,QAAL,CAAc;AACdT,YAAAA,SAAS,EAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBU,MAArB,CAA4BF,OAA5B;AADE,WAAd;AAGD;AACA,OARD,MAQO;AACHO,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACC;AACF,KAdT;AAeD;;AAEDG,EAAAA,iBAAiB,GAAG;AAAE;AAClBvC,IAAAA,KAAK,CAACwC,GAAN,CAAU,kCAAV,EAA8CP,IAA9C,CAAoDC,QAAD,IAAa;AAChE,UAAGA,QAAQ,CAACG,IAAT,CAAcI,QAAd,KAA2B,IAA9B,EAAmC;AACjC,aAAKZ,QAAL,CAAc;AACVP,UAAAA,IAAI,EAAGY,QAAQ,CAACG,IAAT,CAAcf,IAAd,CAAmB,CAAnB,EAAsBoB;AADnB,SAAd;AAGAP,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcf,IAAd,CAAmB,CAAnB,EAAsBoB,QAAlC;AAED;AAEA,KATD;AAUA,SAAKX,QAAL;AAEH;;AAEDY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK7B,KAAzB;AAEA,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE6B,OAAO,CAACtC,SAA9B;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKU;AAA/B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAM,QAAA,GAAG,EAAC,MAAV;AAAgB,QAAA,SAAS,EAAE4B,OAAO,CAAClC,UAAnC;AAAA,mBACKyB,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKjB,KAAL,CAAWC,SAAX,CAAqBM,MAA1D,CADL,EAEK,KAAKP,KAAL,CAAWC,SAAX,CAAqByB,OAArB,GAA+BC,GAA/B,CAAoCC,IAAD,IACpC;AACA,iBAAOA,IAAP;AACC,SAHA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAhF4B;;AAmFjC,eAAe9C,UAAU,CAACC,MAAD,EAAS;AAAE8C,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCnC,QAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport {withRouter, useHistory, BrowserRouter , Switch, Route, Link, Redirect} from \"react-router-dom\";\r\nimport PostDialog from './PostDialog';\r\nimport Post from './Post';\r\nimport Axios from 'axios';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: \"red\"\r\n    },\r\n    listClass: {\r\n      borderStyle: 'dashed',\r\n      borderColor: 'red',\r\n\r\n      display:'inline-block',\r\n    },\r\n    listClass2: {\r\n         borderStyle: 'dashed',\r\n        borderColor: 'blue',\r\n        display:'inline-block',\r\n        alignItems:'center',\r\n     justify:'center',\r\n\r\n      }\r\n  });\r\n\r\n\r\nclass Newsfeed extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.addPost = this.addPost.bind(this);\r\n        this.createPost = this.createPost.bind(this);\r\n\r\n        this.state = {\r\n            feedItems : [],\r\n            currentText : \"\",\r\n            user : \"\"\r\n\r\n        }\r\n    }\r\n\r\n    createPost(description, tags, file) {\r\n        return <Post key={this.state.feedItems.length} description={description} tags={tags} file={file} user={this.state.user}/>;\r\n    }\r\n\r\n    addPost(description, tags, image) {\r\n        const newPost = this.createPost(description, tags, image);\r\n        this.setState({\r\n            feedItems : this.state.feedItems.concat([newPost])\r\n        });\r\n    }\r\n\r\n    getPosts() {\r\n      this.setState({\r\n      feedItems : []\r\n      });\r\n      Axios.post('http://localhost:3001/allposts', {\r\n          }).then((response) => {\r\n            console.log(response.data[0].description);\r\n            if(response){\r\n              for(var i = 0; i < response.data.length; i++) {\r\n              const newPost = this.createPost(response.data[i].description,\"test\",\"https://shortyawards.imgix.net/entries/10th/f86a61c4-6af8-41c2-9f6c-5d8493b33eac.jpeg?auto=format&fit=crop&h=400&q=65&w=400&s=67548cae6d33a6c1210960a19d943799\");\r\n              addPost(newPost);\r\n              this.setState({\r\n              feedItems : this.state.feedItems.concat(newPost)\r\n              });\r\n            }\r\n            } else {\r\n                console.log(\"no response\")\r\n                }\r\n              });\r\n    }\r\n\r\n    componentDidMount() { // Runs after the first render\r\n        Axios.get('http://localhost:3001/checklogin').then((response)=> {\r\n        if(response.data.loggedIn === true){\r\n          this.setState({\r\n              user : response.data.user[0].Username\r\n          });\r\n          console.log(response.data.user[0].Username)\r\n\r\n        }\r\n\r\n        });\r\n        this.getPosts();\r\n\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Container className={classes.listClass}>\r\n            <PostDialog onPostSubmit={this.addPost}></PostDialog>\r\n            <List ref=\"feed\"className={classes.listClass2} >\r\n                {console.log(\"number of elements: \" + this.state.feedItems.length)}\r\n                {this.state.feedItems.reverse().map((item) =>\r\n                {\r\n                return item\r\n                })\r\n                }\r\n            </List>\r\n            </Container>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Newsfeed);\r\n"]},"metadata":{},"sourceType":"module"}