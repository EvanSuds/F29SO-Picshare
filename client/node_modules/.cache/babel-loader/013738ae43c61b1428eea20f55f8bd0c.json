{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\evan_\\\\Documents\\\\GitHub\\\\F29SO-Picshare\\\\client\\\\src\\\\PostDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport UploadButton from './UploadButton';\nimport Axios from 'axios';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport exifr from 'exifr';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: \"red\"\n  },\n  postImage: {\n    height: 'auto',\n    maxWidth: '36vh',\n    maxHeight: '33vw',\n    borderRadius: '0%'\n  },\n  postBox: {\n    borderStyle: 'dotted',\n    borderColor: 'red'\n  }\n});\n\nvar user,\n    lat,\n    long = \"\";\n\nclass PostDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleTagsChange = this.handleTagsChange.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.state = {\n      open: false,\n      description: \"\",\n      tags: \"\",\n      file: null\n    };\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleUpload(file) {\n    this.setState({\n      file: file\n    });\n  }\n\n  handleDescriptionChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  handleTagsChange(event) {\n    this.setState({\n      tags: event.target.value\n    });\n  }\n\n  resetState() {\n    this.setState({\n      description: \"\",\n      tags: \"\",\n      file: null\n    });\n  }\n\n  handlePost() {\n    this.props.onPostSubmit(this.state.description, this.state.tags, this.state.file);\n    console.log(\"File: \" + this.state.file);\n    this.processFile(this.state.file);\n    this.resetState();\n    this.handleClose();\n  }\n\n  async processFile(arg) {\n    let url;\n    if (arg instanceof Blob) url = URL.createObjectURL(arg);else url = arg; // original image loaded, extract thumb\n\n    try {\n      let {\n        latitude,\n        longitude\n      } = await exifr.gps(url);\n      console.log(longitude);\n      console.log(latitude);\n      Axios.post('http://localhost:3001/posts', {\n        postLong: longitude,\n        postLat: latitude\n      }).then(response => {\n        if (response) {} else {\n          console.log(\"no response\");\n        }\n      });\n    } catch {\n      console.log(\"No EXIF Data\");\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: this.state.open,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"customized-dialog-title\",\n          onClose: this.handleClose,\n          children: \"Create a new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n            onUpload: this.handleUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.postImage,\n            src: this.state.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"description\",\n              label: \"Add a description.\",\n              multiline: true,\n              onChange: this.handleDescriptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"tags\",\n              label: \"Add a few tags!\",\n              multiline: true,\n              onChange: this.handleTagsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handlePost,\n            color: \"primary\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleClose,\n            color: \"secondary\",\n            children: \"Discard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PostDialog);","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/F29SO-Picshare/client/src/PostDialog.js"],"names":["React","Button","DialogTitle","Dialog","DialogContent","DialogActions","TextField","UploadButton","Axios","withStyles","exifr","styles","theme","root","backgroundColor","postImage","height","maxWidth","maxHeight","borderRadius","postBox","borderStyle","borderColor","user","lat","long","PostDialog","Component","constructor","props","handleClickOpen","bind","handleClose","handleUpload","handleDescriptionChange","handleTagsChange","handlePost","resetState","state","open","description","tags","file","setState","event","target","value","onPostSubmit","console","log","processFile","arg","url","Blob","URL","createObjectURL","latitude","longitude","gps","post","postLong","postLat","then","response","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport UploadButton from './UploadButton';\r\nimport Axios from 'axios';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport exifr from 'exifr';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      backgroundColor: \"red\"\r\n    },\r\n    postImage: {\r\n\r\n        height: 'auto',\r\n        maxWidth:'36vh',\r\n        maxHeight:'33vw',\r\n        borderRadius: '0%',\r\n    },\r\n    postBox: {\r\n        borderStyle: 'dotted',\r\n        borderColor: 'red'\r\n\r\n    }\r\n  });\r\n\r\nvar user, lat, long = \"\";\r\nclass PostDialog extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleUpload = this.handleUpload.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleTagsChange = this.handleTagsChange.bind(this);\r\n        this.handlePost = this.handlePost.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n        this.state = {\r\n            open : false,\r\n            description : \"\",\r\n            tags : \"\",\r\n            file : null\r\n        };\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({\r\n            open : true\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            open : false\r\n        });\r\n    }\r\n\r\n    handleUpload(file) {\r\n        this.setState({\r\n          file: file\r\n        });\r\n    }\r\n\r\n    handleDescriptionChange(event){\r\n        this.setState({\r\n            description : event.target.value\r\n        });\r\n    }\r\n\r\n    handleTagsChange(event){\r\n        this.setState({\r\n            tags : event.target.value\r\n        })\r\n    }\r\n\r\n    resetState(){\r\n        this.setState({\r\n            description : \"\",\r\n            tags : \"\",\r\n            file : null\r\n        })\r\n    }\r\n\r\n    handlePost(){\r\n        this.props.onPostSubmit(this.state.description, this.state.tags, this.state.file);\r\n        console.log(\"File: \" + this.state.file);\r\n        this.processFile(this.state.file);\r\n        this.resetState();\r\n        this.handleClose();\r\n    }\r\n\r\n    async processFile(arg) {\r\n        let url;\r\n        if (arg instanceof Blob)\r\n            url = URL.createObjectURL(arg);\r\n        else\r\n            url = arg;\r\n        // original image loaded, extract thumb\r\n        try {\r\n            let { latitude, longitude } = await exifr.gps(url);\r\n            console.log(longitude);\r\n            console.log(latitude);\r\n\r\n            Axios.post('http://localhost:3001/posts', {\r\n                postLong: longitude,\r\n                postLat: latitude\r\n            }).then((response) => {\r\n                if (response) {\r\n                } else {\r\n                    console.log(\"no response\")\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n        catch{\r\n            console.log(\"No EXIF Data\");\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div >\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                Add Post\r\n            </Button>\r\n          <Dialog  onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n              Create a new post\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n            <UploadButton onUpload={this.handleUpload} />\r\n            <img className={classes.postImage} src={this.state.file} />\r\n            <form noValidate autoComplete=\"off\">\r\n                <TextField  id=\"description\" label=\"Add a description.\" multiline onChange={this.handleDescriptionChange}/>\r\n                <br></br>\r\n                <TextField id=\"tags\" label=\"Add a few tags!\" multiline onChange={this.handleTagsChange}/>\r\n            </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={this.handlePost} color=\"primary\">\r\n                Post\r\n              </Button>\r\n              <Button onClick={this.handleClose} color=\"secondary\">\r\n                Discard\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles, { withTheme: true }) (PostDialog);\r\n"]},"metadata":{},"sourceType":"module"}